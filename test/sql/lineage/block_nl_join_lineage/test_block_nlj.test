# name: test/sql/lineage/block_nl_join_lineage/test_block_nlj.test
# description: Test Block Nested Loop Join
# group: [block_nl_join_lineage]
# plan_joinref.cpp has details on when this physical operator is used

statement ok
CREATE TABLE t1(i INTEGER, j INTEGER);

statement ok
CREATE TABLE t2(i INTEGER);

statement ok
INSERT INTO t1 SELECT i+1, i FROM range(0,5) tbl(i);
INSERT INTO t2 VALUES (1), (1000), (10)

statement ok
PRAGMA trace_lineage = "ON"

# standalone limit
query III
select t1.i, t1.j, t2.i from t1, t2 where t1.i < t2.i or t1.i == t2.i
----
1	0	1000
1	0	10
1	0	1
2	1	1000
2	1	10
3	2	1000
3	2	10
4	3	1000
4	3	10
5	4	1000
5	4	10


statement ok
PRAGMA trace_lineage = "OFF";

query II
select query_id, query from queries_list;
----
11	select t1.i, t1.j, t2.i from t1, t2 where t1.i < t2.i or t1.i == t2.i
13	PRAGMA trace_lineage = "OFF";

query IIIIII
select lhs_rowid, lhs_in_chunk_id, rhs_rowid, rhs_in_chunk_id, out_index, out_chunk_id from BLOCKWISE_NL_JOIN_11_0;
----
0	0	1	0	0	0
0	0	2	0	1	0
0	0	0	0	2	0
1	0	1	0	0	1
1	0	2	0	1	1
2	0	1	0	0	2
2	0	2	0	1	2
3	0	1	0	0	3
3	0	2	0	1	3
4	0	1	0	0	4
4	0	2	0	1	4