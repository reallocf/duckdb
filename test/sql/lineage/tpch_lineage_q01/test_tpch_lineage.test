# name: test/sql/lineage/tpch_lineage/test_tpch_lineage.test
# description: Test TPCH Q01 Lineage
# group: [tpch_lineage_q01]

require tpch

statement ok
CALL dbgen(sf=0.01);

statement ok
PRAGMA trace_lineage = "ON";

query IIIIIIIIII
PRAGMA tpch(1)
----
A	F	380456	532348211.65	505822441.4861	526165934.000839	25.575155	35785.709307	0.050081	14876
N	F	8971	12384801.37	11798257.2080	12282485.056933	25.778736	35588.509684	0.047759	348
N	O	742802	1041502841.45	989737518.6346	1029418531.523350	25.454988	35691.129209	0.049931	29181
R	F	381449	534594445.35	507996454.4067	528524219.358903	25.597168	35874.006533	0.049828	14902

statement ok
PRAGMA trace_lineage = "OFF";

query II
SELECT * FROM queries_list;
----
1	PRAGMA tpch(1)
2	PRAGMA trace_lineage = "OFF";

# Check out the generated tables
query I
PRAGMA show_tables;
----
LINEAGE_1_HASH_GROUP_BY_3_0
LINEAGE_1_HASH_GROUP_BY_3_1
LINEAGE_1_ORDER_BY_4_0
LINEAGE_1_SEQ_SCAN_0_0
customer
lineitem
nation
orders
part
partsupp
queries_list
region
supplier

# Confirm the forward lineage for the first 10 items are correct
query III
SELECT rowid, l_returnflag, l_linestatus FROM lineitem LIMIT 10
----
0	N	O
1	N	O
2	N	O
3	N	O
4	N	O
5	N	O
6	N	O
7	R	F
8	R	F
9	A	F

query II
SELECT l1.in_index, l4.out_index
FROM LINEAGE_1_SEQ_SCAN_0_0 AS l1
JOIN LINEAGE_1_HASH_GROUP_BY_3_0 AS l2 ON l1.out_index = l2.in_index
JOIN LINEAGE_1_HASH_GROUP_BY_3_1 AS l3 ON l2.out_index = l3.in_index
JOIN LINEAGE_1_ORDER_BY_4_0 AS l4 ON l3.out_index = l4.in_index
WHERE l1.in_index < 10
----
0	2
1	2
2	2
3	2
4	2
5	2
6	2
7	3
8	3
9	0
