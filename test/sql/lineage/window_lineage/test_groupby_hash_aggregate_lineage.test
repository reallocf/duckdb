# name: test/sql/lineage/groupby_lineage/test_window_lineage.test
# description: Test Group By linage -- hash aggregate
# group: [window_lineage]

statement ok
PRAGMA trace_lineage = "OFF";

statement ok
CREATE TABLE t1(i INTEGER, j INTEGER, t integer);

statement ok
INSERT INTO t1 VALUES (1, 2, 0),  (1, 2, 1), (2, 4, 2), (2, 1, 3), (1, 1, 4), (3, 3, 5), (1, 2, 6), (0, 1, 7)
#(2, 1, 3), (1, 1, 4), (0, 1, 7),  (1, 2, 0), (1, 2, 1),  (1, 2, 6),  (3, 3, 5), (2, 4, 2)
#3,4,7,0,1,6,5,2
#7,4,0,1,6,3,2,5

statement ok
INSERT INTO t1 SELECT 0, i-1, i+8 FROM range(0,2080) tbl(i);

statement ok
INSERT INTO t1 SELECT 0, i-1, i+8 FROM range(0,2080) tbl(i);

statement ok
PRAGMA trace_lineage = "ON";

# standalone limit
query II
SELECT i, rowid,  SUM(j) OVER w AS running_total , group_concat(rowid) over w FROM t1  window w as (partition by i order by j rows between 2 preceding and 1 following)
----


statement ok
PRAGMA trace_lineage = "OFF";

query II
SELECT * FROM queries_list;
----
1	select t1.i, avg(t1.j) from t1 GROUP BY t1.i
2	PRAGMA trace_lineage = "OFF";

query III
select sink.rowid, sink.in_index, scan.out_index from LINEAGE_1_HASH_GROUP_BY_2_1 as scan, LINEAGE_1_HASH_GROUP_BY_2_0 as sink where scan.in_index=sink.out_index;
----
0	0	0
1	1	1
2	2	0
3	3	2
4	4	1
5	5	0
6	6	2
7	7	1