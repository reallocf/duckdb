# name: test/sql/lineage/groupby_lineage/test_groupby_hash_aggregate_lineage.test
# description: Test Group By linage -- hash aggregate
# group: [groupby_hash_aggregate_lineage]


statement ok
PRAGMA trace_lineage = "OFF";

statement ok
CREATE TABLE t1(i VARCHAR(10), j INTEGER, k INTEGER);

statement ok
INSERT INTO t1 VALUES ('Haneen', 2, 4),  ('Omar', 2, 5), ('Haneen', 4, 6), ('Mohammed', 1, 7), ('Omar', 1, 8), ('Haneen', 3, 9), ('Mohammed', 2, 10), ('Omar', 1, 10)

statement ok
PRAGMA enable_profiling = "json";

statement ok
PRAGMA profiling_output='test.json'

statement ok
PRAGMA trace_lineage = "ON";

# standalone limit
query IIII
select avg(t1.k), avg(t1.j+t1.k), avg(t1.j),t1.i  from t1 GROUP BY t1.i
----
6.333333	9.333333	3.000000	Haneen
7.666667	9.000000	1.333333	Omar
8.500000	10.000000	1.500000	Mohammed

statement ok
PRAGMA disable_profiling;

statement ok
PRAGMA trace_lineage = "OFF";

statement ok
PRAGMA prepcolumns="select avg(t1.k), avg(t1.j+t1.k), avg(t1.j),t1.i  from t1 GROUP BY t1.i";

query III
SELECT * FROM queries_list;
----
0	PRAGMA trace_lineage = "ON";	0
1	select t1.i, avg(t1.j) from t1 GROUP BY t1.i	0

query III
select sink.rowid, sink.in_index, scan.out_index from LINEAGE_1_HASH_GROUP_BY_2_1 as scan, LINEAGE_1_HASH_GROUP_BY_2_0 as sink where scan.in_index=sink.out_index;
----
0	0	0
1	1	1
2	2	0
3	3	2
4	4	1
5	5	0
6	6	2
7	7	1