# name: test/sql/lineage/hash_join/test_hash_join.test
# description: Test Hash Joins
# group: [hash_join]


statement ok
PRAGMA trace_lineage = "OFF";

statement ok
CREATE TABLE t1(i INTEGER, j INTEGER);

statement ok
INSERT INTO t1 VALUES (3, 1),  (NULL, 2), (2, 3), (3, 4), (3, 8), (3, 7)

statement ok
CREATE TABLE t2(i INTEGER, k VARCHAR(10));
#CREATE TABLE t2(i VARCHAR(10), k INTEGER);

statement ok
INSERT INTO t2 VALUES (3, 'A'),   (2, 'B'), (3, 'C'), (1, 'D'), (3, 'A')


statement ok
PRAGMA trace_lineage = "ON";

# standalone limit
query II
select t1.j, t2.k from t1 inner join t2 on (t1.i = t2.i)
----
1	A
3	B
4	A
8	A
7	A
1	C
4	C
8	C
7	C
1	A
4	A
8	A
7	A


statement ok
PRAGMA trace_lineage = "OFF";

query II
SELECT * FROM queries_list;
----
13	select t1.j, t2.k from t1 inner join t2 on (t1.i = t2.i)
15	PRAGMA trace_lineage = "OFF";

query IIII
select rowid, chunk_id, index as output, value as input from HASH_JOIN_13_0_LHS;
----
0	0	0	0
1	0	1	2
2	0	2	3
3	0	3	4
4	0	4	5
5	0	5	0
6	0	6	3
7	0	7	4
8	0	8	5
9	0	9	0
10	0	10	3
11	0	11	4
12	0	12	5


query III
select rowid, chunk_id, index as output from HASH_JOIN_13_0_RHS;
----
0	0	0
1	0	1
2	0	2
3	0	3
4	0	4
5	0	5
6	0	6
7	0	7
8	0	8
9	0	9
10	0	10
11	0	11
12	0	12


query III
select rowid, chunk_id, index as output from HASH_JOIN_13_0_SINK;
----
0	0	0
1	0	1
2	0	2
3	0	3
4	0	4

query IIII
select r.rowid, r.chunk_id, r.index as output, s.index as input  from HASH_JOIN_13_0_SINK as s, HASH_JOIN_13_0_RHS as r where s.value=r.value ;
----
0	0	0	4
1	0	1	1
2	0	2	4
3	0	3	4
4	0	4	4
5	0	5	2
6	0	6	2
7	0	7	2
8	0	8	2
9	0	9	0
10	0	10	0
11	0	11	0
12	0	12	0